<?php
// $Id: uc_zpayment.module,v 1.1.2.2 2009/01/29 15:18:59 ibabushka Exp $
define("zpaymentActionUrl" ,"https://z-payment.ru/merchant.php");

/********************************************************************
 * Drupal Hooks
 ********************************************************************/

/**
 * Implementation of hook_menu()
 */

function uc_zpayment_menu() {
  
    $items['cart/zpayment/complete'] = array(
      'title'    => t('Internal Data'),
      'page callback' => 'uc_zpayment_complete',
      'access callback' => 'uc_zpayment_complete_access',
      'type'     => MENU_CALLBACK,
      'file' => 'uc_zpayment.pages.inc',
    );
    $items['cart/zpayment/finalize'] = array(
      'title'    => t('zpayment processing'),
      'page callback' => 'uc_zpayment_finalize',
      'access callback' => 'uc_zpayment_complete_access',
      'type'     => MENU_CALLBACK,
      'file' => 'uc_zpayment.pages.inc',
    );
    $items['cart/zpayment/fail'] = array(
      'title'    => t('zpayment processing'),
      'page callback' => 'uc_zpayment_fail',
      'access callback' => 'uc_zpayment_complete_access',
      'type'     => MENU_CALLBACK,
      'file' => 'uc_zpayment.pages.inc',
    );
    $items['cart/zpayment/result'] = array(
      'title'    => t('zpayment processing'),
      'page callback' => 'uc_zpayment_result',
      'access callback' => 'uc_zpayment_complete_access',
      'type'     => MENU_CALLBACK,
      'file' => 'uc_zpayment.pages.inc',
    );
    

  return $items;
}

// Make sure anyone can complete their Z-payment orders.
function uc_zpayment_complete_access() {
  return TRUE;
}

/**
 * Implementation of hook_form_alter().
 */
function uc_zpayment_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'uc_cart_checkout_review_form' && ($order_id = intval($_SESSION['cart_order'])) > 0) {
    $order = uc_order_load($order_id);

    if ($order->payment_method == 'zpayment') {
      unset($form['submit']);
      $form['#prefix'] = '<table ><tr><td>';
      $form['#suffix'] = '</td><td>'. drupal_get_form('uc_zpayment_form', $order) .'</td></tr></table>';
    }
  }
}


/********************************************************************
 * Hook Functions (Ubercart)
 ********************************************************************/

/**
 * Implementation of hook_payment_method().
 */
function uc_zpayment_payment_method() {
  $path = base_path() . drupal_get_path('module', 'uc_zpayment');
  $title =  t('z-payment') . '<br /><img src="'. $path .'/images/zpayment.gif" style="position: relative; left: 2.5em;">';

  $methods[] = array(
    'id' => 'zpayment',
    'name' => t('zpayment'),
    'title' => $title,
    'desc' => t('Redirect to zpayment.com.'),
    'callback' => 'uc_payment_method_zpayment',
    'weight' => 3,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

/********************************************************************
 * other Functions
 ********************************************************************/
function uc_payment_method_zpayment($op, &$arg1) {
	global $base_url;

  switch ($op) {
    case 'cart-details':
      return $details;
    case 'settings':
    
  		$form['uc_zpayment_action_url'] = array(
    		'#type'          => 'textfield',
    		'#title'         => t('Action url'),
    		'#default_value' => variable_get('uc_zpayment_action_url',zpaymentActionUrl),
    		'#description'   => t("Please enter action url.\nDefault: !url", array('!url' => zpaymentActionUrl)),
  		);
  
  
  		$form['uc_zpayment_store_id'] = array(
    		'#type'          => 'textfield', 
    		'#title'         => t('Store id'),
    		'#default_value' => variable_get('uc_zpayment_store_id',''),
    		'#description'   => t("Please enter Store id."),
    		'#required' => TRUE,
    		'#size' => 6,
  		);
  
  		$form['uc_zpayment_result_url'] = array(
  			'#type' => 'item',
  			'#title' => t('Result URL'),
  			'#value'					=> t($base_url . '/cart/zpayment/result'),
  			'#description' => t('Copy to z-payment'),
  		);
  
  		$form['uc_zpayment_success_url'] = array(
  			'#type' => 'item',
  			'#title' => t('Success URL'),
  			'#value'					=> t($base_url . '/cart/zpayment/complete'),
  			'#description' => t('Copy to z-payment'),
  		);
  
  		$form['uc_zpayment_fail_url'] = array(
  			'#type' => 'item',
  			'#title' => t('Fail URL'),
  			'#value'					=> t($base_url . '/cart/zpayment/fail'),
  			'#description' => t('Copy to z-payment'),
  		);

      return $form;
    case 'cart-process':
      return;
  }
}


function uc_zpayment_form($form_state, $order) {
  
  $amount = $order->order_total;
  $ser['amount']=$amount;
  $description=serialize($ser);
  if (db_result(db_query("SELECT COUNT(txnid) FROM {uc_zpayment_transaction} WHERE txnid = '%s'", $order->order_id))) {
     db_query("UPDATE {uc_zpayment_transaction} SET description = '%s' WHERE txnid = %d",$description, $order->order_id);
  }else {
     db_query("INSERT INTO {uc_zpayment_transaction} (txnid, description) VALUES (%d, '%s')", $order->order_id, $description);
  }


  $data_hidden = array(
  	
  
  );
 
 
	// Shop id
	$form['LMI_PAYEE_PURSE'] = array(
    	'#type' => 'hidden',
    	'#value' => variable_get('uc_zpayment_store_id', ''),
  	);
 
 // Order id
  $form['LMI_PAYMENT_NO'] = array(
    '#type' => 'hidden',
    '#value' => $order->order_id,
  );

	// Comment
  $form['LMI_PAYMENT_DESC'] = array(
    '#type' => 'hidden',
    '#default_value' => t('Oplata zakaza'),
  );
  
  // User E-mail
    $form['CLIENT_MAIL'] = array(
    '#type' => 'hidden',
    '#default_value' => $order->primary_email,
  );

	// Amount
  $form['LMI_PAYMENT_AMOUNT'] = array(
    '#type' => 'hidden',
    '#value' => $amount,
  );
  
  $form['#action'] = variable_get('uc_zpayment_action_url',zpaymentActionUrl);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Place your order'),
  );
  return $form;
}


// UTILS
function uc_zpayment_redirect_url($url = '') {

  if( !$url ) $url = 'http://truecoach.ru';

  // Javascript redirect on the finalization page.
  $output = '<script type="text/javascript">window.location = "'. url($url, array('absolute' => TRUE)) .'";</script>';

  // Text link for users without Javascript enabled.
  $output .= l(t('Click to complete checkout.'), $url, array('absolute' => TRUE));

  print $output;
  exit();
}


//
function uc_zpayment_finalize ($order_id = 0){

  if (intval($_SESSION['cart_order']) != $order_id) {
    $_SESSION['cart_order'] = $order_id;
  }

  if(isset($_SESSION['cart_order'])){
    $order_id = $_SESSION['cart_order'];
    $_SESSION['do_complete'] = TRUE;
    drupal_goto('cart/checkout/complete');
  } else {
    unset($_SESSION['cart_order']);
//    drupal_set_message( t("Your payment has been declined."));
    drupal_goto('cart');
  }
   
}

