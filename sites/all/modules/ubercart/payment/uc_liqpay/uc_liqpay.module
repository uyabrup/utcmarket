<?php
// $Id$

/**
 * @file
 * Module for work with service liqpay. Module uc_liqpay add in ubercart new type payment.
 */
define("LiqpayActionUrl" ,"https://liqpay.com/?do=clickNbuy");
 
/**
* Implementation of hook_perm().
*/
function uc_liqpay_perm() {
  return array('administer uc_liqpay');
}
/**
 * Implementation of hook_menu().
 */
function uc_liqpay_menu() {
  $items['uc_liqpay/server_url'] = array(
    'title' => 'Internal Data',
    'page callback' => 'uc_liqpay_done_payment',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['uc_liqpay/result_url'] = array(
    'title' => 'Liqpay processing',
    'page callback' => 'uc_liqpay_payment_end',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/store/settings/liqpay'] = array(
    'title' => 'Liqpay',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_liqpay_list'),
    'access arguments' => array('administer uc_liqpay'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/store/settings/liqpay/overview'] = array(
    'title' => 'Overview',
    'access arguments' => array('administer uc_liqpay'),
    'weight' => 0,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/store/settings/liqpay/add'] = array(
    'title' => 'Add currency',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_liqpay_add'),
    'access arguments' => array('administer uc_liqpay'),
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/store/settings/liqpay/edit'] = array(
    'title' => 'Edit currency',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_liqpay_edit'),
    'access arguments' => array('administer uc_liqpay'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Implementation of hook_theme().
 */
function uc_liqpay_theme(){
  return array(
    'uc_liqpay_list' => array(
      'arguments' => array('form'), 
    ),
  );
}
/**
 * Implementation of hook_payment_method().
 */
function uc_liqpay_payment_method() {
  $path = base_path() . drupal_get_path('module', 'uc_liqpay');
  $title =  t('liqpay') . '<br /><img src="'. $path .'/images/liqpay.png" style="position: relative; left: 2.5em;">';
  $methods[] = array(
    'id' => 'liqpay',
    'name' => t('Liqpay'),
    'title' => $title,
    'desc' => t('Redirect to liqpay to pay by.'),
    'callback' => 'uc_payment_method_liqpay',
    'weight' => 4,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );
  return $methods;
}
/**
 * Callback for liqpay payment page settings
 */
function uc_liqpay_list() {
  $result = db_query('SELECT * FROM {uc_liqpay_rates} ORDER BY currency');
  while ($template = db_fetch_object($result)){
    $form[$template->currency]['merchant_id'] = array('#value' => $template->merchant_id);
    $form[$template->currency]['secret_key'] = array('#value' => $template->secret_key);
    $form[$template->currency]['rate'] = array('#value' => $template->rate);
    $form[$template->currency]['edit'] = array('#value' => $template->currency);
    $merchant_ids[$template->currency] = '';
  }
  $form['check']=array(
    '#type' => 'checkboxes',
    '#options' => $merchant_ids
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Delete checked currency'),
  );
  return $form;
}
/**
 * Handle post-validation form submission
 */
function uc_liqpay_list_submit($form, $form_state){
  foreach($form_state['values']['check'] as $key => $val) {
    if($key == (string)$val){
      db_query("DELETE FROM {uc_liqpay_rates} WHERE currency = '%s'", $val);
      drupal_set_message(t('You successfully deleted currency - @currency.',
          array('@currency' => $val)));
    }
  }
}
/**
 * Theme form uc_liqpay_list form
 */
function theme_uc_liqpay_list($form){
  $header = array(
    theme('table_select_header_cell'),
    t('Currency'),
    t('Merchant ID'),
    t('Signature'),
    t('Rate'),
    t('Action'),
  );      
  foreach (element_children($form) as $key => $value) {
    $row = array();
    if (is_array($form[$value]['merchant_id'])) {
      $row[] = drupal_render($form['check'][$value]);
      $row[] = $temp = drupal_render($form[$value]['edit']);
      $row[] = drupal_render($form[$value]['merchant_id']);
      $row[] = drupal_render($form[$value]['secret_key']);
      $row[] = drupal_render($form[$value]['rate']);
      $row[] =  l(t('Edit'), 'admin/store/settings/liqpay/edit/'. $temp);
      $rows[] = $row;
    }
  }
  $output = theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;
}
/**
 * Callback for liqpay payment page add currency
 */
function uc_liqpay_add() {
  $form['currency'] = array(
    '#type'          => 'select',
    '#title'         => t('Currency'),
    '#default_value' => 'UAH',
    '#options'     => array('UAH' => 'UAH', 'USD' => 'USD', 'EUR' => 'EUR', 'RUR' => 'RUR'),
    '#description'   => t("Please, select currency."),
    '#required'      => TRUE,
  );
  $form['merchant_id'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Merchant ID'),
    '#maxlength'     => 13,
    '#default_value' => '',
    '#description'   => t("Please, enter MERCHANT ID."),
    '#required'      => TRUE,
  );
  $form['rate'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Rate'),
    '#maxlength'     => 6,
    '#default_value' => '1.0',
    '#description'   => t("Please, enter rate of currency."),
    '#required'      => TRUE,
  );
  $form['secret_key'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Signature'),
    '#default_value' => '',
    '#maxlength'     => 64,
    '#description'   => t("Please enter signature."),
    '#required'      => TRUE,
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('ADD LP-CURRENCY'),
  );
  return $form;
}
/**
 * Validate the form
 */
function uc_liqpay_add_validate($form, $form_state){
  if(!empty($form_state['values']['currency'])){
    $merchant_ids = db_fetch_object(db_query('SELECT * FROM {uc_liqpay_rates} WHERE currency = "%s" ',$form_state['values']['currency']));
    if(isset($merchant_ids->currency)){
      form_set_error('currency', t('@currency already exists. Please enter another currency.', array('@currency' => $merchant_ids->currency)));
    }
  }
}
/**
 * Handle post-validation form submission
 */
function uc_liqpay_add_submit($form, $form_state){
  if(!empty($form_state['values']['currency']) ){
    db_query("INSERT INTO {uc_liqpay_rates} (currency, merchant_id, secret_key, rate) VALUES ('%s', '%s', '%s', '%s')", 
              $form_state['values']['currency'], $form_state['values']['merchant_id'], 
              $form_state['values']['secret_key'], $form_state['values']['rate']);
  }
  drupal_set_message(t('You successfully added currency - @currency.', array('@currency' => $form_state['values']['currency'])));
  drupal_goto('admin/store/settings/liqpay/list');
}

/**
 * Callback for liqpay payment page edit currency
 */
function uc_liqpay_edit($form_state, $currency){
  $merchant_ids = db_fetch_object(db_query('SELECT * FROM {uc_liqpay_rates} WHERE currency = "%s" ', $currency));
  $form['currency'] = array(
    '#type'          => 'hidden',
    '#value'         => $currency
  );
  $form['merchant_id'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Merchant ID'),
    '#default_value' => $merchant_ids->merchant_id,
    '#required'      => TRUE,
  );
  $form['secret_key'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Signature'),
    '#default_value' => $merchant_ids->secret_key,
    '#maxlength'     => 64,
    '#description'   => t("Please enter SIGNATURE."),
    '#required'      => TRUE,
  );
  $form['rate'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Rate to site currency'),
    '#default_value' => $merchant_ids->rate,
    '#required'      => TRUE,
    '#description'   => t("Please enter liqpay rate according to site currency."),
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Update Currency'),
  );
  $form['cansel'] = array(
    '#value' => l('Cansel', 'admin/store/settings/liqpay'),
  ); 
  return $form;
}
/**
 * Handle post-validation form submission
 */
function uc_liqpay_edit_submit($form, $form_state){
  if(!empty($form_state['values']['secret_key']) ){
    db_query("UPDATE {uc_liqpay_rates} set secret_key = '%s', merchant_id = '%s', rate = '%s' WHERE currency = '%s'", 
              $form_state['values']['secret_key'], $form_state['values']['merchant_id'],
              $form_state['values']['rate'], $form_state['values']['currency']);
  }
  drupal_goto('admin/store/settings/liqpay/list');
}
/**
 * Callback for liqpay payment method settings.
 */
function uc_payment_method_liqpay($op, &$arg1) {
  switch ($op) {
    case 'cart-details':
      $result = db_query('SELECT * FROM {uc_liqpay_rates} ORDER BY currency');
      $first = 'checked';
      while ($template = db_fetch_object($result)){
        $options .= '<div class="form-item"><label class="option"><input name="LPCURRENCY" value="'.$template->currency.'" '.$first.' class="form-radio" type="radio"> '.$template->currency.'</label></div>';
        $first = '';
      }
      $details = '<div class="form-item"> <label>'. t('currency of merchant currency') . '</label>'
                  .'<div class="form-radios">'
                  .$options
                  .'</div>'
                  .'<div class="description">'.t("What type of currency will be used.").'</div>'
                  .'</div>';

      return $details;
    case 'cart-process':
      $_SESSION['LPCURRENCY'] = $_POST['LPCURRENCY'];
      return;
  }
}
/**
 * Implementation of hook_form_alter().
 */
function uc_liqpay_form_alter(&$form, $form_state, $form_id) {
  $order_id = (int)$_SESSION['cart_order'];
  if ($form_id == 'uc_cart_checkout_review_form' && $order_id > 0) {
    $order = uc_order_load($order_id);
    if ($order->payment_method == 'liqpay') {
      unset($form['submit']);
      $form['#prefix'] = '<table ><tr><td>';
      $form['#suffix'] = '</td><td>'. drupal_get_form('uc_liqpay_submit_form', $order) .'</td></tr></table>';
      
    }
  }
}
/**
 * Add new button with liqpay settings
 */
function uc_liqpay_submit_form($form_state, $order) {
  global $base_url;
  $lp = db_fetch_object(db_query('SELECT * FROM {uc_liqpay_rates} WHERE currency = "%s"', $_SESSION['LPCURRENCY']));
  $sum = round($order->order_total * $lp->rate, 2);
  $ser[$lp->merchant_id] = $sum;
  $description = serialize($ser);
  if (db_result(db_query("SELECT COUNT(txnid) FROM {uc_liqpay_transaction} WHERE txnid = '%s'", $order->order_id))) {
     db_query("UPDATE {uc_liqpay_transaction} SET description = '%s' WHERE txnid = %d", $description, $order->order_id);
  }else {
     db_query("INSERT INTO {uc_liqpay_transaction} (txnid, description) VALUES (%d, '%s')", $order->order_id, $description);
  }
  $site_name = variable_get('site_name', '');
  $description_tovar = '';
  foreach($order->products as $value){
    $description_tovar .= $value->qty. ' x '. $value->title. '; ';
  }
  $xml = "<request>      
      <version>1.2</version>
      <result_url>". $base_url. "/uc_liqpay/result_url</result_url>
      <server_url>". $base_url. "/uc_liqpay/server_url</server_url>
      <merchant_id>$lp->merchant_id</merchant_id>
      <order_id>$order->order_id</order_id>
      <amount>$sum</amount>
      <currency>$lp->currency</currency>
      <description>$site_name:$description_tovar</description>
      <default_phone>$order->billing_phone</default_phone>
      <pay_way></pay_way>
  </request>";
  $operation_xml = base64_encode($xml);
  $signature = base64_encode(sha1($lp->secret_key. $xml. $lp->secret_key, 1));
  
  $form['operation_xml'] = array(
    '#type' => 'hidden',
    '#value' => $operation_xml,
  );
  $form['signature'] = array(
    '#type' => 'hidden',
    '#value' => $signature,
  );
  $form['#action'] = LiqpayActionUrl;
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Place your order'),
    '#disabled' => isset($lp->currency)? FALSE : TRUE,
  );
  if(!isset($lp->currency)){
    drupal_set_message('You have not selected the currency. 
    		If no selected the currency, contact the site administrator.', 'error');
  }
  return $form;
}
/**
 * Callback for liqpay 
 */
function uc_liqpay_done_payment(){
  drupal_set_header('Content-type: text/html; charset=iso-8859-1');
  $operation_xml     = $GLOBALS['_POST']['operation_xml'];
  $signature         = $GLOBALS['_POST']['signature'];
  
  $xml = base64_decode($operation_xml);
  $vars = simplexml_load_string($xml);
  $respons['version'] = $vars->version;
  $respons['action'] = $vars->action;
  $respons['merchant_id'] = $vars->merchant_id;
  $respons['order_id'] = $vars->order_id;
  $respons['amount'] = $vars->amount;
  $respons['currency'] = $vars->currency;
  $respons['description'] = $vars->description;
  $respons['status'] = $vars->status;
  $respons['code'] = $vars->code;
  $respons['transaction_id'] = $vars->transaction_id;
  $respons['pay_way'] = $vars->pay_way;
  $respons['sender_phone'] = $vars->sender_phone;
  
  $merchant_id = $respons['merchant_id'];

  $data = db_fetch_object(db_query("SELECT * FROM {uc_liqpay_rates} WHERE currency = '%s'", $respons['currency']));
  
  $signature_check = base64_encode(sha1($data->secret_key.$xml.$data->secret_key,1));
  
  $data2 = db_fetch_object(db_query("SELECT * FROM {uc_liqpay_transaction} WHERE txnid = '%d' ",$respons['order_id']));
  $un = unserialize($data2->description);
  $order = uc_order_load($respons['order_id']);

  if ($order === FALSE) {
    $res = t('An error has occurred during payment.  Please contact us to ensure your order has submitted.');
    uc_order_comment_save($respons['order_id'], 0, $res, 'admin');
    uc_order_update_status($respons['order_id'], 'canceled');
    exit();
  }
  if($un["$merchant_id"] != $respons['amount']){
    $res = t('This number does not match the original price');
    uc_order_comment_save($respons['order_id'], 0, $res.var_export($un,true), 'admin');
    uc_order_update_status($respons['order_id'], 'canceled');
  }
  if(empty($data) || $data->currency != $respons['currency']){
    $res = t('Your currency does not match the original');
    uc_order_comment_save($order_id, 0, $res, 'admin');
    uc_order_update_status($order_id, 'canceled');
  }
  if(!empty($signature) ){
    if($signature != $signature_check) {
      $res = t('Security check failed');
      uc_order_comment_save($respons['order_id'], 0, $res, 'admin');
      uc_order_update_status($respons['order_id'], 'canceled');
    }
  }
  if(!empty($data) && $un["$merchant_id"] == $respons['amount'] && $signature == $signature_check && $respons['status'] == 'success'){
      $isok=true;
  }
  if($isok){
    $description = t('Payment from phone %sender_phone by %pay_way', array('%sender_phone' => $respons, '%pay_way' => $respons['pay_way']));
    uc_order_comment_save($respons['order_id'], 0, $description, 'admin');
    /* db_query("UPDATE {uc_liqpay_transaction} SET description = '%s' WHERE txnid = %d", $description, $respons['order_id']); */
    uc_payment_enter($respons['order_id'], 'liqpay', $respons['amount'], $order->uid, NULL, $description);
    uc_cart_complete_sale($respons['order_id']);
    uc_order_comment_save($respons['order_id'], 0, t('A payment has been accepted.'), 'admin');
  } elseif($respons['status']=='wait_secure') {
    uc_order_comment_save($respons['order_id'], 0, $res."Status of payment: ". $respons['status']. " (validation of card)", 'admin');
    uc_order_update_status($respons['order_id'], 'canceled');
  }  else{
    uc_order_comment_save($respons['order_id'], 0, $res."Something is wrong: ".$respons['status'], 'admin');
    uc_order_update_status($respons['order_id'], 'canceled');
  }
print $res; exit();
}
/**
 * callback function with result
 */
function uc_liqpay_payment_end(){
  $res = uc_liqpay_check_payment();
  //print "<pre>"; print_r($res); print "</pre>";die;
  if(count($res) != 0) { 
    if($res['status'] == 'success' || $res['status'] == 'wait_secure'){
      if(isset($_SESSION['cart_order'])){
        $_SESSION['do_complete'] = TRUE;
        drupal_goto('cart/checkout/complete');
      } else {
		if($res['status'] == 'success' || $res['status'] == 'wait_secure'){
			$_SESSION['do_complete'] = TRUE;
			drupal_goto('cart/checkout/complete');
		} else{
			drupal_set_message( t("Your payment has been declined."), 'warning');
			drupal_goto('cart');
		}

	  }
    } else {
      unset($_SESSION['cart_order']);
      drupal_set_message( t("Your payment has been declined."), 'warning');
      drupal_goto('cart');
    }
  }
}
/**
 * Get information with site liqpay
 */
function uc_liqpay_check_payment() {
  $operation_xml     = $GLOBALS['_POST']['operation_xml'];
  $signature         = $GLOBALS['_POST']['signature'];
  $xml = base64_decode($operation_xml);
  $vars = simplexml_load_string($xml);
  $respons['version'] = $vars->version;
  $respons['action'] = $vars->action;
  $respons['merchant_id'] = $vars->merchant_id;
  $respons['order_id'] = $vars->order_id;
  $respons['amount'] = $vars->amount;
  $respons['currency'] = $vars->currency;
  $respons['description'] = $vars->description;
  $respons['status'] = $vars->status;
  $respons['code'] = $vars->code;
  $respons['transaction_id'] = $vars->transaction_id;
  $respons['pay_way'] = $vars->pay_way;
  $respons['sender_phone'] = $vars->sender_phone;
  
  $merchant_id = $respons['merchant_id'];
  
  $data = db_fetch_object(db_query("SELECT * FROM {uc_liqpay_rates} WHERE currency = '%s'", $respons['currency']));
  
  $signature_check = base64_encode(sha1($data->secret_key.$xml.$data->secret_key,1));
  
  $data2 = db_fetch_object(db_query("SELECT * FROM {uc_liqpay_transaction} WHERE txnid = '%d' ", $respons['order_id']));
  
  $un = unserialize($data2->description);
  $order = uc_order_load($respons['order_id']);

  if($un["$merchant_id"] != $respons['amount']){
    $res = false;
  }
  if(empty($data) || $data->currency != $respons['currency']){
    $res = false;
  }
  if(!empty($signature) ){
    if($signature != $signature_check) {
      $res = false;
    }
  }
  if(!empty($data) && $un["$merchant_id"] == $respons['amount'] && $signature == $signature_check){
      $res=$respons;
  }
return $res; 
}